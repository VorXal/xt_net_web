@using Common
@using DependencyResolver
@using Entities
@{
    Layout = "_Layout.cshtml";

    if (!User.Identity.IsAuthenticated)
    {
        Response.Redirect("~/Pages/SignIn.cshtml");
    }
    IUserBLL UserLogic = DependencyResolver.UserLogic;
    IAwardBLL AwardLogic = DependencyResolver.AwardLogic;
    var message = "";

    Page.Title = "User Manager";

    if (IsPost)
    {
        if (Request.Form["newUserName"] != null)
        {
            var newUserName = Request.Form["newUserName"];
            var newUserDoB = Request.Form["newUserDoB"].AsDateTime();
            var newUserAge = Request.Form["newUserAge"].AsInt();
            UserLogic.AddUser(newUserName, newUserDoB, newUserAge);
        }
        if (Request.Form["userId"] != null)
        {

            var userId = Request.Form["userId"];
            message += "<p>This user have this awards:</p>";
            foreach(Award a in UserLogic.GetAwards(userId))
            {
                message += $"<p>{a.Title}<p>";
            }
        }
        if (Request.Form["removeUserId"] != null)
        {
            UserLogic.RemoveUserByID(Request.Form["removeUserId"]);
        }
        if(Request.Form["addUserId"] != null && Request.Form["addAwardId"] != null)
        {
            UserLogic.AddAward(Request.Form["addUserId"], Request.Form["addAwardId"]);
        }
        if(Request.Form["editUserId"] != null)
        {
            message = "";
            if(UserLogic.GetUserByID(Request.Form["editUserId"]) != null)
            {
                var obj = UserLogic.GetUserByID(Request.Form["editUserId"]);
                message += "<form method='post'>";
                message += $"<p>User with id:<input name='editUserId' value='{obj.ID}' readonly></p>";
                message += $"<p>Have name <input name='editUserName' value='{obj.Name}'></p>";
                message += $"<p>Was born <input name='editUserDoB' value='{obj.DoB}'</p>";
                message += $"<p>And <input name='editUserAge' value='{obj.Age}'> years old</p><input type='submit'></form>";
            }
            else
            {
                message = $"We can't find user with ID:{Request.Form["editUserId"]}";
            }
        }
        if(Request.Form["editUserName"] != null)
        {
            UserLogic.EditUser(Request.Form["editUserId"], Request.Form["editUserName"],
                               Request.Form["editUserDoB"].AsDateTime(), Request.Form["editUserAge"].AsInt());
            message = "User successefuly changed!";
        }
    }


}

    <div>
        <p>Select what u want:</p>
        <button id="displayUsers">Display all users</button>
        <button id="displayAwards">Display awards which have this user</button>
            @if(User.IsInRole("admin"))
            {
            <button id="newUser">Create new user</button>
            <button id="removeUser">Remove User</button>
            <button id="addAward">Add award to user</button>
            <button id="editUser">Edit User</button>
            }
        
        <button id="back"><a href="~/Pages/StartPage.cshtml">Go back</a></button>
    </div>
    <div id="Out">
        @if (IsPost)
        {
            @Html.Raw(message);
        }
    </div>
    <script type="text/javascript">
        @if (User.IsInRole("admin"))
        {
            <text>
                const createUserBtn = document.getElementById('newUser');
                const displayUsersBtn = document.getElementById('displayUsers');
                const displayAwards = document.getElementById('displayAwards');
                const removeUser = document.getElementById('removeUser');
                const addAward = document.getElementById('addAward');
                const editUser = document.getElementById('editUser');
                const output = document.getElementById('Out');

                createUserBtn.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'><p>Insert User Name</p><input name='newUserName'>" +
                        "<p>Insert Date of Birth(dd/MM/yyyy)</p><input name='newUserDoB'>" +
                        "<p>Insert Age</p><input name='newUserAge'>" +
                        "<p><input type='submit' id='submitNewUserBtn'></p></form>";

                });

                displayUsersBtn.addEventListener("click", () => {
                    output.innerHTML = '<table id="table" style="border: 4px double black;"><tr><td>ID</td>' +
                        '<td>Name</td><td>DateOfBirth</td><td>Age</td><tr></table>';
                    let table = document.getElementById('table');
                    @foreach(User user in UserLogic.GetAllUsers())
                    {<text>
                    table.innerHTML += `<tr><td>${'@user.ID'}</td><td>${'@user.Name'}</td>
                        <td>${'@user.DoB.ToString("dd/MM/yyyy")'}</td><td>${'@user.Age'}</td><tr>`;
                     </text>
                    }
                });

                displayAwards.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'><p>Insert Id</p><input name='userId'><input type='submit' id='submitAwardsBtn'></form>";
                });

                removeUser.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'><p>Insert Id</p><input name='removeUserId'><input type='submit' id='submitAwardsBtn'></form>";
                });

                addAward.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'>" +
                        "<p> Insert user Id</p><input name='addUserId'>" +
                        "<p> Insert award Id</p><input name='addAwardId'>" +
                        "<input type='submit' id='submitAwardsBtn'></form >" +
                        "<p>AWARDS:</p>";

                    output.innerHTML += '<table id="table" style="border: 4px double black;"><tr><td>ID</td>' +
                        '<td>Title</td><tr></table>';
                    let table = document.getElementById('table');
                    @foreach(Award award in AwardLogic.GetAllAwards())
                    {<text>
                    table.innerHTML += `<tr><td>${'@award.ID'}</td><td>${'@award.Title'}</td><tr>`;
                     </text>
                    }
                });

                editUser.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'><p>Insert Id</p><input name='editUserId'><input type='submit' id='submitAwardsBtn'></form>";
                });
            </text>
        }
        else
        {
            <text>
                const displayUsersBtn = document.getElementById('displayUsers');
                const displayAwards = document.getElementById('displayAwards');
                const output = document.getElementById('Out');
                
                displayUsersBtn.addEventListener("click", () => {
                    output.innerHTML = '<table id="table" style="border: 4px double black;"><tr><td>ID</td>' +
                        '<td>Name</td><td>DateOfBirth</td><td>Age</td><tr></table>';
                    let table = document.getElementById('table');
                    @foreach(User user in UserLogic.GetAllUsers())
                    {<text>
                    table.innerHTML += `<tr><td>${'@user.ID'}</td><td>${'@user.Name'}</td>
                        <td>${'@user.DoB.ToString("dd/MM/yyyy")'}</td><td>${'@user.Age'}</td><tr>`;
                     </text>
                    }
                });

                displayAwards.addEventListener("click", () => {
                    output.innerHTML = "<form method='post'><p>Insert Id</p><input name='userId'><input type='submit' id='submitAwardsBtn'></form>";
                });
            </text>
        }


    </script>
